Program.Sub.Preflight.Start
V.Global.bUnattended.Declare(Boolean)
V.Global.bError.Declare(Boolean)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

'check to see if the script is firing off of the post online update 
F.Intrinsic.Control.If(V.Caller.Hook,=,38130)
	F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN, V.Ambient.PUser, V.Ambient.PPass)

	'subroutine to pull the information out of the custom WTInfo Table
	F.Intrinsic.Control.CallSub(WeightInfo)
	'subroutine to loop through the WTInfo datatable and update item master 
	F.Intrinsic.Control.CallSub(ItemMstrUpdate)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(f_Main_Unload)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "5755", "ProjectTitle", "Item Master Weight", "Callback", "f_Main_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.WeightInfo.Start
F.Intrinsic.Control.Try
V.Local.dDateProcessed.Declare(Date)
V.Local.sDateProcessed.Declare(String)
V.Local.sSQL.Declare(String)

V.Local.dDateProcessed.Set(V.Ambient.Date)
F.Intrinsic.String.Format(V.Local.dDateProcessed, "YYYY-MM-DD", v.Local.sDateProcessed)
'query job,suffix,sequence, bin, tare_wt, apw, date_last_updated from GCG_5755_WTINFO
F.Intrinsic.String.Build("SELECT DISTINCT A.JOB, A.SUFFIX, A.SEQ, B.PART, LEFT(A.BIN,7) AS 'BIN', RIGHT(A.BIN,3) AS 'LOC',  A.TARE_WT, A.APW FROM GCG_5755_WTINFO A LEFT JOIN V_JOB_HEADER B ON A.JOB = B.JOB AND A.SUFFIX = B.SUFFIX WHERE A.DATE_LAST_UPDATED = '{0}' ORDER BY A.JOB, A.SUFFIX, A.SEQ", v.Local.sDateProcessed, v.Local.sSQL)

F.Intrinsic.Control.If(V.DataTable.dtWTInfo.Exists)
	F.Data.DataTable.Close("dtWTInfo")
F.Intrinsic.Control.EndIf

F.Data.DataTable.CreateFromSQL("dtWTInfo", "con", V.Local.sSQL, True)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "5755", "ProjectTitle", "Item Master Weight", "Callback", "f_Main_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.WeightInfo.End

Program.Sub.ItemMstrUpdate.Start
F.Intrinsic.Control.Try
V.Local.dDateLstUpdated.Declare(Date)
V.Local.fAPW.Declare(Float)
V.Local.fTareWght.Declare(Float)
V.Local.iCnt.Declare(Long)
V.Local.sBin.Declare(String)
V.Local.sLoc.Declare(String)
V.Local.sDateLstUpdated.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sSQL.Declare(String)

v.Local.dDateLstUpdated.Set(V.Ambient.Date)
F.Intrinsic.String.Format(V.Local.dDateLstUpdated, "YYYY-MM-DD", V.Local.sDateLstUpdated)

F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtWTInfo.RowCount--,1)
	V.Local.fTareWght.Set(V.DataTable.dtWTInfo(V.Local.iCnt).TARE_WT!FieldVal)
	F.Intrinsic.Math.Round(V.Local.fTareWght, 5, V.Local.fTareWght)
	V.Local.fAPW.Set(V.DataTable.dtWTInfo(V.Local.iCnt).APW!FieldVal)
	F.Intrinsic.Math.Round(V.Local.fAPW, 5, V.Local.fAPW)
	V.Local.sPart.Set(V.DataTable.dtWTInfo(V.Local.iCnt).PART!FieldVal)
	V.Local.sBin.Set(V.DataTable.dtWTInfo(V.Local.iCnt).BIN!FieldVal)
	V.Local.sLoc.Set(V.DataTable.dtWTInfo(V.Local.iCnt).LOC!FieldVal)
	
	F.Intrinsic.String.Build("SELECT USER_FIELD_7, USER_FIELD_8, USER_FIELD_9 FROM V_ITEM_MASTER WHERE PART = '{0}' AND LOCATION = '{1}' AND BIN = '{2}'", V.Local.sPart, V.Local.sLoc, v.Local.sBin, v.Local.sSQL)
	F.ODBC.Connection!con.OpenLocalRecordsetRW("rstItemMstr", V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.con!rstItemMstr.EOF,<>,True)
		F.ODBC.con!rstItemMstr.Set!USER_FIELD_7(V.Local.fTareWght)
		F.ODBC.con!rstItemMstr.Set!USER_FIELD_8(V.Local.fAPW)
		F.ODBC.con!rstItemMstr.Set!USER_FIELD_9(V.Local.sDateLstUpdated)
		F.ODBC.con!rstItemMstr.Update
		F.ODBC.con!rstItemMstr.Close
	F.Intrinsic.Control.Else
		F.ODBC.con!rstItemMstr.Close
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "5755", "ProjectTitle", "Item Master Weight", "Callback", "f_Main_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.ItemMstrUpdate.End

Program.Sub.f_Main_Unload.Start
F.Intrinsic.Control.Try

'close the connection
F.ODBC.Connection!con.Close
'end the program
F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
		F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "5755", "ProjectTitle", "Item Master Weight", "Callback", "f_Main_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.f_Main_Unload.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Global.bError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf
V.Global.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$acollins$}$20201123085931473$}$h98hERc2yV72q0GaUGlwSaoK/aefTdVkg+e2yth67TYU4ErU4xJtQC1OqjTQee7G3rXIFGT/Ll1qtfskKSWCFQ==
Program.Sub.Comments.End